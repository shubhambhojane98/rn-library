// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly with default prop 1`] = `
<View
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "center",
      "backgroundColor": "#FFF",
      "borderColor": "#D7D7D7",
      "borderRadius": 60.2,
      "borderWidth": 1.2285714285714286,
      "flexDirection": "row",
      "marginHorizontal": 6.142857142857142,
      "opacity": 1,
      "paddingHorizontal": 19.65714285714286,
      "paddingVertical": 4.914285714285715,
    }
  }
>
  <View
    accessible={true}
    collapsable={false}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  />
  <Text
    style={
      Array [
        Object {
          "fontFamily": "AvenirNextLTPro-Bold",
          "fontSize": 21.13142857142857,
          "fontWeight": "bold",
        },
        Object {
          "color": "#000",
        },
        Object {
          "textAlign": "left",
        },
        Object {
          "fontSize": 17.2,
          "lineHeight": 20.885714285714286,
          "paddingHorizontal": 19.65714285714286,
          "paddingVertical": 8.6,
        },
      ]
    }
    theme={
      Object {
        "colors": Object {
          "background": "#FFF",
          "backgroundLayout": "rgba(0, 0, 0, 0.8)",
          "black": "#000",
          "error": "#B00020",
          "greyOpac10": "rgba(53, 53, 53, 0.1)",
          "greyOpac50": "rgba(53, 53, 53, 0.5)",
          "lightgrey": "#D7D7D7",
          "linkColor": "#0000EE",
          "primary": "#FAD000",
          "primaryVariant": "#3700B3",
          "secondary": "#03DAC6",
          "secondaryVariant": "#018786",
          "shadowColor": "#222",
          "textColor": "#000",
          "transparent": "transparent",
          "white": "#FFF",
        },
        "dark": false,
      }
    }
  >
    Whats New
  </Text>
  <View
    accessible={true}
    collapsable={false}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  />
</View>
`;

exports[`renders correctly with isDisabled prop 1`] = `
<View
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "center",
      "backgroundColor": "#FFF",
      "borderColor": "#D7D7D7",
      "borderRadius": 60.2,
      "borderWidth": 1.2285714285714286,
      "flexDirection": "row",
      "marginHorizontal": 6.142857142857142,
      "opacity": 0.5,
      "paddingHorizontal": 19.65714285714286,
      "paddingVertical": 4.914285714285715,
    }
  }
>
  <View
    accessible={true}
    collapsable={false}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  />
  <Text
    style={
      Array [
        Object {
          "fontFamily": "AvenirNextLTPro-Bold",
          "fontSize": 21.13142857142857,
          "fontWeight": "bold",
        },
        Object {
          "color": "#000",
        },
        Object {
          "textAlign": "left",
        },
        Object {
          "fontSize": 17.2,
          "lineHeight": 20.885714285714286,
          "paddingHorizontal": 19.65714285714286,
          "paddingVertical": 8.6,
        },
      ]
    }
    theme={
      Object {
        "colors": Object {
          "background": "#FFF",
          "backgroundLayout": "rgba(0, 0, 0, 0.8)",
          "black": "#000",
          "error": "#B00020",
          "greyOpac10": "rgba(53, 53, 53, 0.1)",
          "greyOpac50": "rgba(53, 53, 53, 0.5)",
          "lightgrey": "#D7D7D7",
          "linkColor": "#0000EE",
          "primary": "#FAD000",
          "primaryVariant": "#3700B3",
          "secondary": "#03DAC6",
          "secondaryVariant": "#018786",
          "shadowColor": "#222",
          "textColor": "#000",
          "transparent": "transparent",
          "white": "#FFF",
        },
        "dark": false,
      }
    }
  >
    Whats New
  </Text>
  <View
    accessible={true}
    collapsable={false}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  />
</View>
`;

exports[`renders correctly with selectedBackgroundColor & textColor & selectedTextColor prop 1`] = `
<View
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "center",
      "backgroundColor": "#FFF",
      "borderColor": "#D7D7D7",
      "borderRadius": 60.2,
      "borderWidth": 1.2285714285714286,
      "flexDirection": "row",
      "marginHorizontal": 6.142857142857142,
      "opacity": 1,
      "paddingHorizontal": 19.65714285714286,
      "paddingVertical": 4.914285714285715,
    }
  }
>
  <View
    accessible={true}
    collapsable={false}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  />
  <Text
    style={
      Array [
        Object {
          "fontFamily": "AvenirNextLTPro-Bold",
          "fontSize": 21.13142857142857,
          "fontWeight": "bold",
        },
        Object {
          "color": "#231F20",
        },
        Object {
          "textAlign": "left",
        },
        Object {
          "fontSize": 17.2,
          "lineHeight": 20.885714285714286,
          "paddingHorizontal": 19.65714285714286,
          "paddingVertical": 8.6,
        },
      ]
    }
    theme={
      Object {
        "colors": Object {
          "background": "#FFF",
          "backgroundLayout": "rgba(0, 0, 0, 0.8)",
          "black": "#000",
          "error": "#B00020",
          "greyOpac10": "rgba(53, 53, 53, 0.1)",
          "greyOpac50": "rgba(53, 53, 53, 0.5)",
          "lightgrey": "#D7D7D7",
          "linkColor": "#0000EE",
          "primary": "#FAD000",
          "primaryVariant": "#3700B3",
          "secondary": "#03DAC6",
          "secondaryVariant": "#018786",
          "shadowColor": "#222",
          "textColor": "#000",
          "transparent": "transparent",
          "white": "#FFF",
        },
        "dark": false,
      }
    }
  >
    Whats New
  </Text>
  <View
    accessible={true}
    collapsable={false}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  />
</View>
`;
